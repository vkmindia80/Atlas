{"version":3,"file":"ScratchpadRoute-wzxynGR2.js","sources":["../../lib/components/grid/useGridCallbackRef.ts","../../public/svgs/checkbox-checked.svg?react","../../public/svgs/checkbox-indeterminate.svg?react","../../public/svgs/checkbox-unchecked.svg?react","../../src/components/Checkbox.tsx","../../src/components/Input.tsx","../../src/routes/ScratchpadRoute.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport type { GridImperativeAPI } from \"./types\";\n\n/**\n * Convenience hook to return a properly typed ref callback for the Grid component.\n *\n * Use this hook when you need to share the ref with another component or hook.\n */\nexport const useGridCallbackRef =\n  useState as typeof useState<GridImperativeAPI | null>;\n","import * as React from \"react\";\nconst SvgCheckboxChecked = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: \"24px\", viewBox: \"0 -960 960 960\", width: \"24px\", fill: \"#e3e3e3\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m424-424-86-86q-11-11-28-11t-28 11q-11 11-11 28t11 28l114 114q12 12 28 12t28-12l226-226q11-11 11-28t-11-28q-11-11-28-11t-28 11L424-424ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z\" }));\nexport default SvgCheckboxChecked;\n","import * as React from \"react\";\nconst SvgCheckboxIndeterminate = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: \"24px\", viewBox: \"0 -960 960 960\", width: \"24px\", fill: \"#e3e3e3\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M320-440h320q17 0 28.5-11.5T680-480q0-17-11.5-28.5T640-520H320q-17 0-28.5 11.5T280-480q0 17 11.5 28.5T320-440ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z\" }));\nexport default SvgCheckboxIndeterminate;\n","import * as React from \"react\";\nconst SvgCheckboxUnchecked = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: \"24px\", viewBox: \"0 -960 960 960\", width: \"24px\", fill: \"#e3e3e3\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z\" }));\nexport default SvgCheckboxUnchecked;\n","import {\n  type FunctionComponent,\n  type HTMLAttributes,\n  type PropsWithChildren,\n  type SVGProps\n} from \"react\";\nimport CheckedIcon from \"../../public/svgs/checkbox-checked.svg?react\";\nimport IndeterminateIcon from \"../../public/svgs/checkbox-indeterminate.svg?react\";\nimport UncheckedIcon from \"../../public/svgs/checkbox-unchecked.svg?react\";\n\nexport function Checkbox({\n  checked,\n  children,\n  className,\n  indeterminate,\n  onChange,\n  ...rest\n}: PropsWithChildren<\n  Omit<HTMLAttributes<HTMLElement>, \"defaultChecked\" | \"onChange\"> & {\n    checked: boolean;\n    className?: string;\n    indeterminate?: boolean;\n    onChange: (value: boolean) => void;\n  }\n>) {\n  let IconElement: FunctionComponent<SVGProps<SVGSVGElement>>;\n  let iconClassName: string;\n  if (indeterminate) {\n    IconElement = IndeterminateIcon;\n    iconClassName = \"fill-white\";\n  } else if (checked) {\n    IconElement = CheckedIcon;\n    iconClassName = \"fill-blue-600\";\n  } else {\n    IconElement = UncheckedIcon;\n    iconClassName = \"fill-slate-600\";\n  }\n\n  return (\n    <label\n      className={`cursor-pointer rounded-lg flex flex-row items-center outline-none group ${className}`}\n      data-focus-within\n      {...rest}\n    >\n      <input\n        checked={checked}\n        className=\"w-0 h-0\"\n        onChange={(event) => {\n          onChange(event.currentTarget.checked);\n        }}\n        type=\"checkbox\"\n      />\n      <IconElement className={iconClassName} />\n      {children && <>&nbsp;{children}</>}\n    </label>\n  );\n}\n","import type { InputHTMLAttributes, PropsWithChildren } from \"react\";\n\nexport function Input<Type extends string>({\n  children,\n  className,\n  onChange,\n  value,\n  ...rest\n}: PropsWithChildren<\n  Omit<InputHTMLAttributes<HTMLInputElement>, \"onChange\"> & {\n    className?: string;\n    onChange: (value: Type) => void;\n    value: Type;\n  }\n>) {\n  return (\n    <input\n      className={`rounded-md bg-black/30 border border-2 border-transparent py-1 px-2 outline-none focus:border-emerald-300 ${className}`}\n      data-focus\n      onChange={(event) => {\n        onChange(event.currentTarget.value as Type);\n      }}\n      value={value}\n      {...rest}\n    >\n      {children}\n    </input>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Grid,\n  useGridCallbackRef,\n  type Align,\n  type CellComponentProps\n} from \"react-window\";\nimport { Block } from \"../components/Block\";\nimport { Box } from \"../components/Box\";\nimport { Checkbox } from \"../components/Checkbox\";\nimport { Input } from \"../components/Input\";\nimport { Select, type Option } from \"../components/Select\";\nimport { cn } from \"../utils/cn\";\n\nconst ALIGNMENTS: Option<Align>[] = (\n  [\"auto\", \"center\", \"end\", \"smart\", \"start\"] satisfies Align[]\n).map((value) => ({\n  label: `align: ${value}`,\n  value\n}));\n\nexport default function ScratchpadRoute() {\n  const [rtl, setRtl] = useState(false);\n  const [columnIndex, setColumnIndex] = useState<number | undefined>();\n  const [rowIndex, setRowIndex] = useState<number | undefined>();\n  const [gridRef, setGridRef] = useGridCallbackRef(null);\n  const [align, setAlign] = useState(ALIGNMENTS[0]);\n\n  return (\n    <Box direction=\"column\" gap={4}>\n      <Box\n        align=\"center\"\n        direction=\"row\"\n        gap={4}\n        onKeyDown={(event) => {\n          switch (event.key) {\n            case \"Enter\": {\n              if (columnIndex !== undefined && rowIndex !== undefined) {\n                gridRef?.scrollToCell({\n                  columnAlign: align.value,\n                  columnIndex,\n                  rowAlign: align.value,\n                  rowIndex\n                });\n              } else if (columnIndex !== undefined) {\n                gridRef?.scrollToColumn({\n                  align: align.value,\n                  index: columnIndex\n                });\n              } else if (rowIndex !== undefined) {\n                gridRef?.scrollToRow({\n                  align: align.value,\n                  index: rowIndex\n                });\n              }\n              break;\n            }\n          }\n        }}\n      >\n        <Select\n          className=\"flex-1\"\n          onChange={setAlign}\n          options={ALIGNMENTS}\n          placeholder=\"Align\"\n          value={align}\n        />\n        <Checkbox checked={rtl} onChange={setRtl} />\n        <Input\n          autoFocus\n          className=\"grow\"\n          min={0}\n          max={99}\n          onChange={(value) => {\n            const parsed = parseInt(value);\n            setColumnIndex(isNaN(parsed) ? undefined : parsed);\n          }}\n          placeholder=\"Column\"\n          step={1}\n          type=\"number\"\n          value={columnIndex === undefined ? \"\" : \"\" + columnIndex}\n        />\n        <Input\n          autoFocus\n          className=\"grow\"\n          min={0}\n          max={99}\n          onChange={(value) => {\n            const parsed = parseInt(value);\n            setRowIndex(isNaN(parsed) ? undefined : parsed);\n          }}\n          placeholder=\"Row\"\n          step={1}\n          type=\"number\"\n          value={rowIndex === undefined ? \"\" : \"\" + rowIndex}\n        />\n      </Box>\n      <Block className=\"w-full h-100\" data-focus-within=\"bold\">\n        <Grid\n          cellComponent={CellComponent}\n          cellProps={{\n            focusedColumnIndex: columnIndex,\n            focusedRowIndex: rowIndex\n          }}\n          columnCount={100}\n          columnWidth={75}\n          dir={rtl ? \"rtl\" : undefined}\n          key={rtl ? \"rtl\" : \"ltr\"}\n          gridRef={setGridRef}\n          rowCount={100}\n          rowHeight={35}\n        />\n      </Block>\n    </Box>\n  );\n}\n\nfunction CellComponent({\n  columnIndex,\n  focusedColumnIndex,\n  focusedRowIndex,\n  rowIndex,\n  style\n}: CellComponentProps<{\n  focusedColumnIndex: number | undefined;\n  focusedRowIndex: number | undefined;\n}>) {\n  return (\n    <div\n      className={cn(\"flex items-center justify-center text-xs\", {\n        \"bg-slate-900\": columnIndex % 2 === rowIndex % 2,\n        \"bg-slate-800\":\n          columnIndex === focusedColumnIndex || rowIndex === focusedRowIndex\n      })}\n      style={style}\n    >\n      row {rowIndex}, col {columnIndex}\n    </div>\n  );\n}\n"],"names":["useGridCallbackRef","useState","SvgCheckboxChecked","props","React.createElement","xmlns","height","viewBox","width","fill","d","SvgCheckboxIndeterminate","SvgCheckboxUnchecked","Checkbox","checked","children","className","indeterminate","onChange","rest","IconElement","iconClassName","IndeterminateIcon","CheckedIcon","UncheckedIcon","jsxs","jsx","event","currentTarget","type","Fragment","Input","value","ALIGNMENTS","map","label","ScratchpadRoute","rtl","setRtl","columnIndex","setColumnIndex","rowIndex","setRowIndex","gridRef","setGridRef","align","setAlign","Box","direction","gap","onKeyDown","key","scrollToCell","columnAlign","rowAlign","scrollToColumn","index","scrollToRow","Select","options","placeholder","autoFocus","min","max","parsed","parseInt","isNaN","step","Block","Grid","cellComponent","CellComponent","cellProps","focusedColumnIndex","focusedRowIndex","columnCount","columnWidth","dir","rowCount","rowHeight","style","cn"],"mappings":"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"}