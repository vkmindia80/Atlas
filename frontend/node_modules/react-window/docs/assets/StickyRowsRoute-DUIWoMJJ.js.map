{"version":3,"file":"StickyRowsRoute-DUIWoMJJ.js","sources":["../../src/constants.ts","../../src/routes/list/examples/ListWithStickyRows.example.tsx","../../src/routes/list/StickyRowsRoute.tsx"],"sourcesContent":["export const EMPTY_ARRAY: unknown[] = [];\nexport const EMPTY_OBJECT = {};\nexport const NOOP_FUNCTION = () => {};\n","import { EMPTY_OBJECT } from \"../../../constants\";\n\nfunction RowComponent({ index, style }: RowComponentProps<object>) {\n  if (index === 0) {\n    return <div style={style}></div>;\n  }\n\n  return <div style={style}>Row {index}</div>;\n}\n\n// <begin>\n\nimport { List, type RowComponentProps } from \"react-window\";\n\nfunction Example() {\n  return (\n    <List\n      rowComponent={RowComponent}\n      rowCount={101}\n      rowHeight={20}\n      rowProps={EMPTY_OBJECT}\n    >\n      <div className=\"w-full h-0 top-0 sticky\">\n        <div className=\"h-[20px] bg-teal-600 px-2 rounded\">Sticky header</div>\n      </div>\n    </List>\n  );\n}\n\n// <end>\n\nexport { Example };\n","import ListWithStickyRowsMarkdown from \"../../../public/generated/code-snippets/ListWithStickyRows.json\";\nimport { Block } from \"../../components/Block\";\nimport { Box } from \"../../components/Box\";\nimport { Callout } from \"../../components/Callout\";\nimport { Code } from \"../../components/code/Code\";\nimport { ExternalLink } from \"../../components/ExternalLink\";\nimport { Header } from \"../../components/Header\";\nimport { Example } from \"./examples/ListWithStickyRows.example\";\n\nexport default function StickyRowsRoute() {\n  return (\n    <Box direction=\"column\" gap={4}>\n      <Header section=\"Other\" title=\"Sticky rows\" />\n      <div>\n        If you want to render content on top of your list or grid, the safest\n        method is to use a{\" \"}\n        <ExternalLink href=\"https://react.dev/reference/react-dom/createPortal\">\n          portal\n        </ExternalLink>{\" \"}\n        and render them directly into the parent document. This avoids potential\n        clipping issues or z-index conflicts.\n      </div>\n      <div>\n        For the specific case of \"sticky\" rows, you can render within the parent\n        list or grid using the <code>children</code> prop:\n      </div>\n      <Block className=\"h-50\" data-focus-within=\"bold\">\n        <Example />\n      </Block>\n      <div>The example above was created using code like this:</div>\n      <Code html={ListWithStickyRowsMarkdown.html} />\n      <Callout intent=\"warning\">\n        <strong>Note</strong> the height of 0 in the example above prevents the\n        sticky row from affecting the height of the parent list.\n      </Callout>\n    </Box>\n  );\n}\n"],"names":["EMPTY_OBJECT","RowComponent","index","style","jsx","jsxs","children","Example","List","rowComponent","rowCount","rowHeight","rowProps","className","StickyRowsRoute","Box","direction","gap","Header","section","title","ExternalLink","href","Block","Code","html","ListWithStickyRowsMarkdown","Callout","intent"],"mappings":"49JACaA,EAAe,CAAA,ECC5B,SAASC,GAAaC,MAAEA,EAAAC,MAAOA,IAC7B,OAAc,IAAVD,EACKE,MAAC,OAAID,UAGPE,OAAC,OAAIF,QAAcG,SAAA,CAAA,OAAKJ,IACjC,CAMA,SAASK,IACP,OACEH,EAAAA,IAACI,EAAA,CACCC,aAAcR,EACdS,SAAU,IACVC,UAAW,GACXC,SAAUZ,EAEVM,SAAAF,EAAAA,IAAC,OAAIS,UAAU,0BACbP,eAAC,MAAA,CAAIO,UAAU,oCAAoCP,SAAA,qBAI3D,CClBA,SAAwBQ,IACtB,OACET,EAAAA,KAACU,EAAA,CAAIC,UAAU,SAASC,IAAK,EAC3BX,SAAA,CAAAF,EAAAA,IAACc,EAAA,CAAOC,QAAQ,QAAQC,MAAM,uBAC7B,MAAA,CAAId,SAAA,CAAA,2FAEgB,IACnBF,EAAAA,IAACiB,EAAA,CAAaC,KAAK,qDAAqDhB,SAAA,WAExD,IAAI,2HAIrB,MAAA,CAAIA,SAAA,CAAA,qGAEoBF,IAAC,QAAKE,SAAA,aAAe,YAE9CF,EAAAA,IAACmB,GAAMV,UAAU,OAAO,oBAAkB,OACxCP,WAAAF,IAACG,UAEHH,IAAC,OAAIE,SAAA,0DACLF,IAACoB,EAAA,CAAKC,KAAMC,MACZrB,KAACsB,EAAA,CAAQC,OAAO,UACdtB,SAAA,GAAAF,IAAC,UAAOE,SAAA,SAAa,mHAK7B"}