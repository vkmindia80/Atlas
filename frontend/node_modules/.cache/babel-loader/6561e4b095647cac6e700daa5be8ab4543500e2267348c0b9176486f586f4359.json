{"ast":null,"code":"import axios from'axios';class ApiService{constructor(){this.api=void 0;this.api=axios.create({baseURL:process.env.REACT_APP_BACKEND_URL||'http://localhost:8001',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\nthis.api.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));// Response interceptor for handling token refresh\nthis.api.interceptors.response.use(response=>response,async error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){const refreshToken=localStorage.getItem('refresh_token');if(refreshToken){try{const response=await this.refreshToken(refreshToken);localStorage.setItem('access_token',response.access_token);// Retry original request\nreturn this.api.request(error.config);}catch(refreshError){this.clearTokens();window.location.href='/login';}}else{this.clearTokens();window.location.href='/login';}}return Promise.reject(error);});}clearTokens(){localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');}// Authentication methods\nasync registerTenant(data){const response=await this.api.post('/api/v1/auth/register-tenant',data);return response.data;}async login(credentials){const response=await this.api.post('/api/v1/auth/login',credentials);const authData=response.data;// Store tokens\nlocalStorage.setItem('access_token',authData.access_token);localStorage.setItem('refresh_token',authData.refresh_token);return authData;}async refreshToken(refreshToken){const response=await this.api.post('/api/v1/auth/refresh',{refresh_token:refreshToken});return response.data;}async logout(){try{await this.api.post('/api/v1/auth/logout');}finally{this.clearTokens();}}async getCurrentUser(){const response=await this.api.get('/api/v1/auth/me');return response.data;}// Generic CRUD methods\nasync get(endpoint,params){const response=await this.api.get(endpoint,{params});return response.data;}async post(endpoint,data){const response=await this.api.post(endpoint,data);return response.data;}async put(endpoint,data){const response=await this.api.put(endpoint,data);return response.data;}async delete(endpoint){const response=await this.api.delete(endpoint);return response.data;}// Health check\nasync healthCheck(){const response=await this.api.get('/health');return response.data;}}export const apiService=new ApiService();export default apiService;","map":{"version":3,"names":["axios","ApiService","constructor","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","refreshToken","setItem","access_token","refreshError","clearTokens","window","location","href","removeItem","registerTenant","data","post","login","credentials","authData","refresh_token","logout","getCurrentUser","get","endpoint","params","put","delete","healthCheck","apiService"],"sources":["/app/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { AuthResponse, LoginCredentials, TenantRegistration } from '../types/auth';\n\nclass ApiService {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001',\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor for handling token refresh\n    this.api.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        if (error.response?.status === 401) {\n          const refreshToken = localStorage.getItem('refresh_token');\n          if (refreshToken) {\n            try {\n              const response = await this.refreshToken(refreshToken);\n              localStorage.setItem('access_token', response.access_token);\n              // Retry original request\n              return this.api.request(error.config);\n            } catch (refreshError) {\n              this.clearTokens();\n              window.location.href = '/login';\n            }\n          } else {\n            this.clearTokens();\n            window.location.href = '/login';\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  private clearTokens(): void {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n\n  // Authentication methods\n  async registerTenant(data: TenantRegistration): Promise<any> {\n    const response = await this.api.post('/api/v1/auth/register-tenant', data);\n    return response.data;\n  }\n\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\n    const response = await this.api.post('/api/v1/auth/login', credentials);\n    const authData = response.data;\n    \n    // Store tokens\n    localStorage.setItem('access_token', authData.access_token);\n    localStorage.setItem('refresh_token', authData.refresh_token);\n    \n    return authData;\n  }\n\n  async refreshToken(refreshToken: string): Promise<{ access_token: string; token_type: string; expires_in: number }> {\n    const response = await this.api.post('/api/v1/auth/refresh', { refresh_token: refreshToken });\n    return response.data;\n  }\n\n  async logout(): Promise<void> {\n    try {\n      await this.api.post('/api/v1/auth/logout');\n    } finally {\n      this.clearTokens();\n    }\n  }\n\n  async getCurrentUser(): Promise<any> {\n    const response = await this.api.get('/api/v1/auth/me');\n    return response.data;\n  }\n\n  // Generic CRUD methods\n  async get<T>(endpoint: string, params?: any): Promise<T> {\n    const response: AxiosResponse<T> = await this.api.get(endpoint, { params });\n    return response.data;\n  }\n\n  async post<T>(endpoint: string, data: any): Promise<T> {\n    const response: AxiosResponse<T> = await this.api.post(endpoint, data);\n    return response.data;\n  }\n\n  async put<T>(endpoint: string, data: any): Promise<T> {\n    const response: AxiosResponse<T> = await this.api.put(endpoint, data);\n    return response.data;\n  }\n\n  async delete<T>(endpoint: string): Promise<T> {\n    const response: AxiosResponse<T> = await this.api.delete(endpoint);\n    return response.data;\n  }\n\n  // Health check\n  async healthCheck(): Promise<any> {\n    const response = await this.api.get('/health');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}