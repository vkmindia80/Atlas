{"ast":null,"code":"import React,{useState,useMemo}from'react';import{format,addDays,startOfWeek,endOfWeek,differenceInDays,parseISO,isValid}from'date-fns';import{ChevronLeftIcon,ChevronRightIcon,CalendarIcon,ClockIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ProjectGantt=_ref=>{let{projectDetail,onUpdate}=_ref;const{project,tasks,milestones}=projectDetail;const[viewStart,setViewStart]=useState(new Date());const[viewMode,setViewMode]=useState('month');const[selectedTask,setSelectedTask]=useState(null);// Calculate project date range\nconst projectDateRange=useMemo(()=>{const dates=[];if(project.planned_start_date){const startDate=parseISO(project.planned_start_date);if(isValid(startDate))dates.push(startDate);}if(project.planned_end_date){const endDate=parseISO(project.planned_end_date);if(isValid(endDate))dates.push(endDate);}tasks.forEach(task=>{if(task.planned_start_date){const taskStart=parseISO(task.planned_start_date);if(isValid(taskStart))dates.push(taskStart);}if(task.planned_end_date){const taskEnd=parseISO(task.planned_end_date);if(isValid(taskEnd))dates.push(taskEnd);}});if(dates.length===0){const today=new Date();return{start:startOfWeek(today),end:endOfWeek(addDays(today,90))};}const sortedDates=dates.sort((a,b)=>a.getTime()-b.getTime());return{start:startOfWeek(sortedDates[0]),end:endOfWeek(sortedDates[sortedDates.length-1])};},[project,tasks]);// Generate timeline columns\nconst timelineColumns=useMemo(()=>{const columns=[];const current=new Date(viewStart);const columnCount=viewMode==='week'?12:8;// Show 12 weeks or 8 months\nfor(let i=0;i<columnCount;i++){columns.push(new Date(current));if(viewMode==='week'){current.setDate(current.getDate()+7);}else{current.setMonth(current.getMonth()+1);}}return columns;},[viewStart,viewMode]);// Calculate task position and width\nconst getTaskDimensions=task=>{if(!task.planned_start_date||!task.planned_end_date){return{left:0,width:0,visible:false};}const taskStart=parseISO(task.planned_start_date);const taskEnd=parseISO(task.planned_end_date);if(!isValid(taskStart)||!isValid(taskEnd)){return{left:0,width:0,visible:false};}const viewEnd=new Date(timelineColumns[timelineColumns.length-1]);viewEnd.setDate(viewEnd.getDate()+(viewMode==='week'?7:30));// Check if task is visible in current view\nif(taskEnd<viewStart||taskStart>viewEnd){return{left:0,width:0,visible:false};}const totalViewDays=differenceInDays(viewEnd,viewStart);const taskStartDays=Math.max(0,differenceInDays(taskStart,viewStart));const taskEndDays=Math.min(totalViewDays,differenceInDays(taskEnd,viewStart));const taskDurationDays=taskEndDays-taskStartDays;const left=taskStartDays/totalViewDays*100;const width=taskDurationDays/totalViewDays*100;return{left,width:Math.max(width,1),visible:true};};const navigateView=direction=>{const newDate=new Date(viewStart);if(viewMode==='week'){newDate.setDate(newDate.getDate()+(direction==='next'?7:-7));}else{newDate.setMonth(newDate.getMonth()+(direction==='next'?1:-1));}setViewStart(newDate);};const getStatusColor=status=>{switch(status){case'completed':return'bg-green-500';case'in_progress':return'bg-blue-500';case'on_hold':return'bg-yellow-500';default:return'bg-gray-400';}};const getPriorityColor=priority=>{switch(priority===null||priority===void 0?void 0:priority.toLowerCase()){case'high':return'border-l-red-500';case'medium':return'border-l-yellow-500';case'low':return'border-l-blue-500';default:return'border-l-gray-400';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",\"data-testid\":\"project-gantt\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:\"Gantt Chart\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex rounded-md shadow-sm\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('week'),className:\"px-3 py-2 text-sm font-medium rounded-l-md border \".concat(viewMode==='week'?'bg-primary-600 text-white border-primary-600':'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),children:\"Week\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('month'),className:\"px-3 py-2 text-sm font-medium rounded-r-md border-t border-r border-b \".concat(viewMode==='month'?'bg-primary-600 text-white border-primary-600':'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),children:\"Month\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",children:\"Export\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",children:\"Add Task\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-80 p-4 border-r border-gray-200 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-sm font-medium text-gray-900\",children:[\"Tasks (\",tasks.length,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateView('prev'),className:\"p-1 text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(ChevronLeftIcon,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateView('next'),className:\"p-1 text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(ChevronRightIcon,{className:\"h-4 w-4\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 bg-gray-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid\",style:{gridTemplateColumns:\"repeat(\".concat(timelineColumns.length,\", 1fr)\")},children:timelineColumns.map((date,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-2 border-r border-gray-200 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-medium text-gray-900\",children:viewMode==='week'?format(date,'MMM dd'):format(date,'MMM yyyy')}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:viewMode==='week'?format(date,'E'):format(date,'MMM')})]},index))})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-96 overflow-y-auto\",children:tasks.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-12 text-gray-500\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(CalendarIcon,{className:\"h-8 w-8 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No tasks scheduled\"})]})}):tasks.map(task=>{var _task$status;const dimensions=getTaskDimensions(task);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex border-b border-gray-100 hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-80 p-3 border-r border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-1 h-8 rounded \".concat(getPriorityColor(task.priority))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-900 truncate\",children:task.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-0.5 rounded-full \".concat(task.status==='completed'?'bg-green-100 text-green-800':task.status==='in_progress'?'bg-blue-100 text-blue-800':task.status==='on_hold'?'bg-yellow-100 text-yellow-800':'bg-gray-100 text-gray-800'),children:(_task$status=task.status)===null||_task$status===void 0?void 0:_task$status.replace('_',' ')}),task.estimated_hours&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-3 w-3 mr-1\"}),task.estimated_hours,\"h\"]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 relative h-12 border-r border-gray-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 grid\",style:{gridTemplateColumns:\"repeat(\".concat(timelineColumns.length,\", 1fr)\")},children:timelineColumns.map((_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"border-r border-gray-100\"},index))}),dimensions.visible&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-2 bottom-2 rounded \".concat(getStatusColor(task.status),\" \").concat(selectedTask===task.id?'ring-2 ring-primary-500':'',\" cursor-pointer hover:opacity-80 transition-opacity\"),style:{left:\"\".concat(dimensions.left,\"%\"),width:\"\".concat(dimensions.width,\"%\")},onClick:()=>setSelectedTask(selectedTask===task.id?null:task.id),title:\"\".concat(task.name,\" (\").concat(Math.round(task.percent_complete),\"% complete)\"),children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 bottom-0 left-0 bg-black bg-opacity-20 rounded\",style:{width:\"\".concat(100-task.percent_complete,\"%\"),right:0,left:'auto'}}),dimensions.width>10&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center px-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-xs font-medium truncate\",children:task.name})})]})]})]},task.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Project Timeline\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Start Date\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:project.planned_start_date?new Date(project.planned_start_date).toLocaleDateString():'Not set'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"End Date\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:project.planned_end_date?new Date(project.planned_end_date).toLocaleDateString():'Not set'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Duration\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:project.planned_start_date&&project.planned_end_date?\"\".concat(Math.ceil((new Date(project.planned_end_date).getTime()-new Date(project.planned_start_date).getTime())/(1000*60*60*24)),\" days\"):'Not calculated'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Upcoming Milestones\"}),milestones.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No milestones defined\"}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:milestones.slice(0,3).map(milestone=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm\",children:milestone.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:new Date(milestone.planned_date).toLocaleDateString()})]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium \".concat(milestone.status==='completed'?'bg-green-100 text-green-800':milestone.status==='in_progress'?'bg-blue-100 text-blue-800':'bg-gray-100 text-gray-800'),children:milestone.status})]},milestone.id))})]})]})]});};","map":{"version":3,"names":["React","useState","useMemo","format","addDays","startOfWeek","endOfWeek","differenceInDays","parseISO","isValid","ChevronLeftIcon","ChevronRightIcon","CalendarIcon","ClockIcon","jsx","_jsx","jsxs","_jsxs","ProjectGantt","_ref","projectDetail","onUpdate","project","tasks","milestones","viewStart","setViewStart","Date","viewMode","setViewMode","selectedTask","setSelectedTask","projectDateRange","dates","planned_start_date","startDate","push","planned_end_date","endDate","forEach","task","taskStart","taskEnd","length","today","start","end","sortedDates","sort","a","b","getTime","timelineColumns","columns","current","columnCount","i","setDate","getDate","setMonth","getMonth","getTaskDimensions","left","width","visible","viewEnd","totalViewDays","taskStartDays","Math","max","taskEndDays","min","taskDurationDays","navigateView","direction","newDate","getStatusColor","status","getPriorityColor","priority","toLowerCase","className","children","onClick","concat","style","gridTemplateColumns","map","date","index","_task$status","dimensions","name","replace","estimated_hours","_","id","title","round","percent_complete","right","toLocaleDateString","ceil","slice","milestone","planned_date"],"sources":["/app/frontend/src/components/Project/ProjectGantt.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { format, addDays, startOfWeek, endOfWeek, differenceInDays, parseISO, isValid } from 'date-fns';\nimport { ChevronLeftIcon, ChevronRightIcon, CalendarIcon, ClockIcon } from '@heroicons/react/24/outline';\nimport { ProjectDetail } from '../../types/project';\n\ninterface ProjectGanttProps {\n  projectDetail: ProjectDetail;\n  onUpdate: () => void;\n}\n\nexport const ProjectGantt: React.FC<ProjectGanttProps> = ({ projectDetail, onUpdate }) => {\n  const { project, tasks, milestones } = projectDetail;\n  const [viewStart, setViewStart] = useState(new Date());\n  const [viewMode, setViewMode] = useState<'week' | 'month'>('month');\n  const [selectedTask, setSelectedTask] = useState<string | null>(null);\n\n  // Calculate project date range\n  const projectDateRange = useMemo(() => {\n    const dates: Date[] = [];\n    \n    if (project.planned_start_date) {\n      const startDate = parseISO(project.planned_start_date);\n      if (isValid(startDate)) dates.push(startDate);\n    }\n    \n    if (project.planned_end_date) {\n      const endDate = parseISO(project.planned_end_date);\n      if (isValid(endDate)) dates.push(endDate);\n    }\n\n    tasks.forEach(task => {\n      if (task.planned_start_date) {\n        const taskStart = parseISO(task.planned_start_date);\n        if (isValid(taskStart)) dates.push(taskStart);\n      }\n      if (task.planned_end_date) {\n        const taskEnd = parseISO(task.planned_end_date);\n        if (isValid(taskEnd)) dates.push(taskEnd);\n      }\n    });\n\n    if (dates.length === 0) {\n      const today = new Date();\n      return {\n        start: startOfWeek(today),\n        end: endOfWeek(addDays(today, 90))\n      };\n    }\n\n    const sortedDates = dates.sort((a, b) => a.getTime() - b.getTime());\n    return {\n      start: startOfWeek(sortedDates[0]),\n      end: endOfWeek(sortedDates[sortedDates.length - 1])\n    };\n  }, [project, tasks]);\n\n  // Generate timeline columns\n  const timelineColumns = useMemo(() => {\n    const columns = [];\n    const current = new Date(viewStart);\n    const columnCount = viewMode === 'week' ? 12 : 8; // Show 12 weeks or 8 months\n    \n    for (let i = 0; i < columnCount; i++) {\n      columns.push(new Date(current));\n      if (viewMode === 'week') {\n        current.setDate(current.getDate() + 7);\n      } else {\n        current.setMonth(current.getMonth() + 1);\n      }\n    }\n    \n    return columns;\n  }, [viewStart, viewMode]);\n\n  // Calculate task position and width\n  const getTaskDimensions = (task: any) => {\n    if (!task.planned_start_date || !task.planned_end_date) {\n      return { left: 0, width: 0, visible: false };\n    }\n\n    const taskStart = parseISO(task.planned_start_date);\n    const taskEnd = parseISO(task.planned_end_date);\n    \n    if (!isValid(taskStart) || !isValid(taskEnd)) {\n      return { left: 0, width: 0, visible: false };\n    }\n\n    const viewEnd = new Date(timelineColumns[timelineColumns.length - 1]);\n    viewEnd.setDate(viewEnd.getDate() + (viewMode === 'week' ? 7 : 30));\n\n    // Check if task is visible in current view\n    if (taskEnd < viewStart || taskStart > viewEnd) {\n      return { left: 0, width: 0, visible: false };\n    }\n\n    const totalViewDays = differenceInDays(viewEnd, viewStart);\n    const taskStartDays = Math.max(0, differenceInDays(taskStart, viewStart));\n    const taskEndDays = Math.min(totalViewDays, differenceInDays(taskEnd, viewStart));\n    const taskDurationDays = taskEndDays - taskStartDays;\n\n    const left = (taskStartDays / totalViewDays) * 100;\n    const width = (taskDurationDays / totalViewDays) * 100;\n\n    return { left, width: Math.max(width, 1), visible: true };\n  };\n\n  const navigateView = (direction: 'prev' | 'next') => {\n    const newDate = new Date(viewStart);\n    if (viewMode === 'week') {\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n    } else {\n      newDate.setMonth(newDate.getMonth() + (direction === 'next' ? 1 : -1));\n    }\n    setViewStart(newDate);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'bg-green-500';\n      case 'in_progress': return 'bg-blue-500';\n      case 'on_hold': return 'bg-yellow-500';\n      default: return 'bg-gray-400';\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority?.toLowerCase()) {\n      case 'high': return 'border-l-red-500';\n      case 'medium': return 'border-l-yellow-500';\n      case 'low': return 'border-l-blue-500';\n      default: return 'border-l-gray-400';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\" data-testid=\"project-gantt\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Gantt Chart</h2>\n        <div className=\"flex space-x-2\">\n          <div className=\"flex rounded-md shadow-sm\">\n            <button\n              onClick={() => setViewMode('week')}\n              className={`px-3 py-2 text-sm font-medium rounded-l-md border ${\n                viewMode === 'week'\n                  ? 'bg-primary-600 text-white border-primary-600'\n                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n              }`}\n            >\n              Week\n            </button>\n            <button\n              onClick={() => setViewMode('month')}\n              className={`px-3 py-2 text-sm font-medium rounded-r-md border-t border-r border-b ${\n                viewMode === 'month'\n                  ? 'bg-primary-600 text-white border-primary-600'\n                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n              }`}\n            >\n              Month\n            </button>\n          </div>\n          <button className=\"btn btn-secondary\">Export</button>\n          <button className=\"btn btn-primary\">Add Task</button>\n        </div>\n      </div>\n\n      {/* Gantt Chart */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        {/* Timeline Header */}\n        <div className=\"border-b border-gray-200\">\n          <div className=\"flex\">\n            {/* Task Names Column Header */}\n            <div className=\"w-80 p-4 border-r border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium text-gray-900\">Tasks ({tasks.length})</h3>\n                <div className=\"flex space-x-1\">\n                  <button\n                    onClick={() => navigateView('prev')}\n                    className=\"p-1 text-gray-400 hover:text-gray-600\"\n                  >\n                    <ChevronLeftIcon className=\"h-4 w-4\" />\n                  </button>\n                  <button\n                    onClick={() => navigateView('next')}\n                    className=\"p-1 text-gray-400 hover:text-gray-600\"\n                  >\n                    <ChevronRightIcon className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Timeline Header */}\n            <div className=\"flex-1 bg-gray-50\">\n              <div className=\"grid\" style={{ gridTemplateColumns: `repeat(${timelineColumns.length}, 1fr)` }}>\n                {timelineColumns.map((date, index) => (\n                  <div key={index} className=\"p-2 border-r border-gray-200 text-center\">\n                    <div className=\"text-xs font-medium text-gray-900\">\n                      {viewMode === 'week' \n                        ? format(date, 'MMM dd') \n                        : format(date, 'MMM yyyy')\n                      }\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {viewMode === 'week' \n                        ? format(date, 'E') \n                        : format(date, 'MMM')\n                      }\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tasks List */}\n        <div className=\"max-h-96 overflow-y-auto\">\n          {tasks.length === 0 ? (\n            <div className=\"flex items-center justify-center py-12 text-gray-500\">\n              <div className=\"text-center\">\n                <CalendarIcon className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\n                <p>No tasks scheduled</p>\n              </div>\n            </div>\n          ) : (\n            tasks.map((task) => {\n              const dimensions = getTaskDimensions(task);\n              \n              return (\n                <div key={task.id} className=\"flex border-b border-gray-100 hover:bg-gray-50\">\n                  {/* Task Info Column */}\n                  <div className=\"w-80 p-3 border-r border-gray-200\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className={`w-1 h-8 rounded ${getPriorityColor(task.priority)}`}></div>\n                      <div className=\"flex-1 min-w-0\">\n                        <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                          {task.name}\n                        </h4>\n                        <div className=\"flex items-center space-x-3 text-xs text-gray-500\">\n                          <span className={`inline-flex items-center px-2 py-0.5 rounded-full ${\n                            task.status === 'completed' ? 'bg-green-100 text-green-800' :\n                            task.status === 'in_progress' ? 'bg-blue-100 text-blue-800' :\n                            task.status === 'on_hold' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {task.status?.replace('_', ' ')}\n                          </span>\n                          {task.estimated_hours && (\n                            <div className=\"flex items-center\">\n                              <ClockIcon className=\"h-3 w-3 mr-1\" />\n                              {task.estimated_hours}h\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Timeline Column */}\n                  <div className=\"flex-1 relative h-12 border-r border-gray-200\">\n                    {/* Background grid */}\n                    <div className=\"absolute inset-0 grid\" style={{ gridTemplateColumns: `repeat(${timelineColumns.length}, 1fr)` }}>\n                      {timelineColumns.map((_, index) => (\n                        <div key={index} className=\"border-r border-gray-100\"></div>\n                      ))}\n                    </div>\n\n                    {/* Task Bar */}\n                    {dimensions.visible && (\n                      <div\n                        className={`absolute top-2 bottom-2 rounded ${getStatusColor(task.status)} ${\n                          selectedTask === task.id ? 'ring-2 ring-primary-500' : ''\n                        } cursor-pointer hover:opacity-80 transition-opacity`}\n                        style={{\n                          left: `${dimensions.left}%`,\n                          width: `${dimensions.width}%`\n                        }}\n                        onClick={() => setSelectedTask(selectedTask === task.id ? null : task.id)}\n                        title={`${task.name} (${Math.round(task.percent_complete)}% complete)`}\n                      >\n                        {/* Progress overlay */}\n                        <div\n                          className=\"absolute top-0 bottom-0 left-0 bg-black bg-opacity-20 rounded\"\n                          style={{ width: `${100 - task.percent_complete}%`, right: 0, left: 'auto' }}\n                        ></div>\n                        \n                        {/* Task label (if wide enough) */}\n                        {dimensions.width > 10 && (\n                          <div className=\"absolute inset-0 flex items-center px-2\">\n                            <span className=\"text-white text-xs font-medium truncate\">\n                              {task.name}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n\n      {/* Timeline Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Project Timeline</h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Start Date</span>\n              <span className=\"font-medium\">\n                {project.planned_start_date ? new Date(project.planned_start_date).toLocaleDateString() : 'Not set'}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">End Date</span>\n              <span className=\"font-medium\">\n                {project.planned_end_date ? new Date(project.planned_end_date).toLocaleDateString() : 'Not set'}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Duration</span>\n              <span className=\"font-medium\">\n                {project.planned_start_date && project.planned_end_date\n                  ? `${Math.ceil((new Date(project.planned_end_date).getTime() - new Date(project.planned_start_date).getTime()) / (1000 * 60 * 60 * 24))} days`\n                  : 'Not calculated'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Upcoming Milestones</h3>\n          {milestones.length === 0 ? (\n            <p className=\"text-gray-500\">No milestones defined</p>\n          ) : (\n            <div className=\"space-y-3\">\n              {milestones.slice(0, 3).map((milestone) => (\n                <div key={milestone.id} className=\"flex justify-between items-center\">\n                  <div>\n                    <div className=\"font-medium text-sm\">{milestone.name}</div>\n                    <div className=\"text-xs text-gray-500\">\n                      {new Date(milestone.planned_date).toLocaleDateString()}\n                    </div>\n                  </div>\n                  <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                    milestone.status === 'completed' ? 'bg-green-100 text-green-800' :\n                    milestone.status === 'in_progress' ? 'bg-blue-100 text-blue-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {milestone.status}\n                  </span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}