{"ast":null,"code":"import _objectSpread from\"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{apiService}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);const initialState={isAuthenticated:false,user:null,token:null,loading:true,error:null};function authReducer(state,action){switch(action.type){case'LOGIN_START':return _objectSpread(_objectSpread({},state),{},{loading:true,error:null});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,user:action.payload.user,token:action.payload.token,loading:false,error:null});case'LOGIN_FAILURE':return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,user:null,token:null,loading:false,error:action.payload});case'LOGOUT':return _objectSpread(_objectSpread({},initialState),{},{loading:false});case'REFRESH_USER':return _objectSpread(_objectSpread({},state),{},{user:action.payload});case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});default:return state;}}export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Check for existing token on mount\nuseEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('access_token');if(token){try{const user=await apiService.getCurrentUser();dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}catch(error){localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');dispatch({type:'SET_LOADING',payload:false});}}else{dispatch({type:'SET_LOADING',payload:false});}};initializeAuth();},[]);const login=async credentials=>{dispatch({type:'LOGIN_START'});try{const authResponse=await apiService.login(credentials);dispatch({type:'LOGIN_SUCCESS',payload:{user:authResponse.user,token:authResponse.access_token}});}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Login failed';dispatch({type:'LOGIN_FAILURE',payload:errorMessage});throw error;}};const logout=async()=>{try{await apiService.logout();}catch(error){console.error('Logout error:',error);}finally{dispatch({type:'LOGOUT'});}};const refreshUser=async()=>{try{const user=await apiService.getCurrentUser();dispatch({type:'REFRESH_USER',payload:user});}catch(error){console.error('Failed to refresh user:',error);}};const value=_objectSpread(_objectSpread({},state),{},{login,logout,refreshUser});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsx","_jsx","AuthContext","undefined","initialState","isAuthenticated","user","token","loading","error","authReducer","state","action","type","_objectSpread","payload","AuthProvider","_ref","children","dispatch","initializeAuth","localStorage","getItem","getCurrentUser","removeItem","login","credentials","authResponse","access_token","_error$response","_error$response$data","errorMessage","response","data","detail","logout","console","refreshUser","value","Provider","useAuth","context","Error"],"sources":["/app/frontend/src/store/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { AuthState, User, LoginCredentials } from '../types/auth';\nimport { apiService } from '../services/api';\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginCredentials) => Promise<void>;\n  logout: () => void;\n  refreshUser: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ntype AuthAction =\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGIN_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'REFRESH_USER'; payload: User }\n  | { type: 'SET_LOADING'; payload: boolean };\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true,\n  error: null,\n};\n\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload,\n      };\n    case 'LOGOUT':\n      return {\n        ...initialState,\n        loading: false,\n      };\n    case 'REFRESH_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          const user = await apiService.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: { user, token },\n          });\n        } catch (error) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          dispatch({ type: 'SET_LOADING', payload: false });\n        }\n      } else {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (credentials: LoginCredentials) => {\n    dispatch({ type: 'LOGIN_START' });\n    try {\n      const authResponse = await apiService.login(credentials);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: authResponse.user,\n          token: authResponse.access_token,\n        },\n      });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.detail || 'Login failed';\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const refreshUser = async () => {\n    try {\n      const user = await apiService.getCurrentUser();\n      dispatch({ type: 'REFRESH_USER', payload: user });\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n    }\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    logout,\n    refreshUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}