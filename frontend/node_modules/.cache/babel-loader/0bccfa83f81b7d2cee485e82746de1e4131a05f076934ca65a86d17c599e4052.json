{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ProjectKanban=_ref=>{let{projectDetail}=_ref;const{tasks}=projectDetail;const columns=[{id:'not_started',title:'To Do',color:'bg-gray-100'},{id:'in_progress',title:'In Progress',color:'bg-blue-100'},{id:'completed',title:'Done',color:'bg-green-100'},{id:'on_hold',title:'On Hold',color:'bg-yellow-100'}];const getTasksForStatus=status=>{return tasks.filter(task=>task.status===status);};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",\"data-testid\":\"project-kanban\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:\"Kanban Board\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-6 overflow-x-auto pb-4\",children:columns.map(column=>{const columnTasks=getTasksForStatus(column.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-shrink-0 w-80\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(column.color,\" rounded-lg p-4 mb-4\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900\",children:column.title}),/*#__PURE__*/_jsx(\"span\",{className:\"bg-white px-2 py-1 rounded-full text-sm font-medium text-gray-700\",children:columnTasks.length})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3 max-h-96 overflow-y-auto\",children:[columnTasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-4 border border-gray-200 hover:shadow-md transition-shadow cursor-pointer\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-2\",children:task.name}),task.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-3 line-clamp-2\",children:task.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full \".concat(task.priority==='high'?'bg-red-100 text-red-800':task.priority==='medium'?'bg-yellow-100 text-yellow-800':'bg-gray-100 text-gray-800'),children:task.priority}),task.estimated_hours&&/*#__PURE__*/_jsxs(\"span\",{children:[task.estimated_hours,\"h\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Progress\"}),/*#__PURE__*/_jsxs(\"span\",{children:[task.percent_complete.toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full\",style:{width:\"\".concat(task.percent_complete,\"%\")}})})]}),task.labels&&task.labels.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 flex flex-wrap gap-1\",children:[task.labels.slice(0,3).map(label=>/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\",children:label},label)),task.labels.length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"+\",task.labels.length-3]})]})]},task.id)),/*#__PURE__*/_jsx(\"button\",{className:\"w-full border-2 border-dashed border-gray-300 rounded-lg p-4 text-gray-500 hover:border-gray-400 hover:text-gray-600 transition-colors\",children:\"+ Add a task\"})]})]},column.id);})})]});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ProjectKanban","_ref","projectDetail","tasks","columns","id","title","color","getTasksForStatus","status","filter","task","className","children","map","column","columnTasks","concat","length","name","description","priority","estimated_hours","percent_complete","toFixed","style","width","labels","slice","label"],"sources":["/app/frontend/src/components/Project/ProjectKanban.tsx"],"sourcesContent":["import React from 'react';\nimport { ProjectDetail } from '../../types/project';\n\ninterface ProjectKanbanProps {\n  projectDetail: ProjectDetail;\n  onUpdate: () => void;\n}\n\nexport const ProjectKanban: React.FC<ProjectKanbanProps> = ({ projectDetail }) => {\n  const { tasks } = projectDetail;\n\n  const columns = [\n    { id: 'not_started', title: 'To Do', color: 'bg-gray-100' },\n    { id: 'in_progress', title: 'In Progress', color: 'bg-blue-100' },\n    { id: 'completed', title: 'Done', color: 'bg-green-100' },\n    { id: 'on_hold', title: 'On Hold', color: 'bg-yellow-100' }\n  ];\n\n  const getTasksForStatus = (status: string) => {\n    return tasks.filter(task => task.status === status);\n  };\n\n  return (\n    <div className=\"space-y-6\" data-testid=\"project-kanban\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Kanban Board</h2>\n        <button className=\"btn btn-primary\">Add Task</button>\n      </div>\n\n      {/* Kanban Board */}\n      <div className=\"flex space-x-6 overflow-x-auto pb-4\">\n        {columns.map((column) => {\n          const columnTasks = getTasksForStatus(column.id);\n          \n          return (\n            <div key={column.id} className=\"flex-shrink-0 w-80\">\n              <div className={`${column.color} rounded-lg p-4 mb-4`}>\n                <div className=\"flex justify-between items-center\">\n                  <h3 className=\"font-semibold text-gray-900\">{column.title}</h3>\n                  <span className=\"bg-white px-2 py-1 rounded-full text-sm font-medium text-gray-700\">\n                    {columnTasks.length}\n                  </span>\n                </div>\n              </div>\n\n              {/* Task Cards */}\n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {columnTasks.map((task) => (\n                  <div\n                    key={task.id}\n                    className=\"bg-white rounded-lg shadow p-4 border border-gray-200 hover:shadow-md transition-shadow cursor-pointer\"\n                  >\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{task.name}</h4>\n                    \n                    {task.description && (\n                      <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">{task.description}</p>\n                    )}\n\n                    <div className=\"flex justify-between items-center text-xs text-gray-500\">\n                      <span className={`px-2 py-1 rounded-full ${\n                        task.priority === 'high' ? 'bg-red-100 text-red-800' :\n                        task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {task.priority}\n                      </span>\n                      \n                      {task.estimated_hours && (\n                        <span>{task.estimated_hours}h</span>\n                      )}\n                    </div>\n\n                    {/* Progress Bar */}\n                    <div className=\"mt-3\">\n                      <div className=\"flex justify-between text-xs mb-1\">\n                        <span>Progress</span>\n                        <span>{task.percent_complete.toFixed(0)}%</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-600 h-2 rounded-full\"\n                          style={{ width: `${task.percent_complete}%` }}\n                        ></div>\n                      </div>\n                    </div>\n\n                    {/* Labels */}\n                    {task.labels && task.labels.length > 0 && (\n                      <div className=\"mt-3 flex flex-wrap gap-1\">\n                        {task.labels.slice(0, 3).map((label) => (\n                          <span\n                            key={label}\n                            className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\"\n                          >\n                            {label}\n                          </span>\n                        ))}\n                        {task.labels.length > 3 && (\n                          <span className=\"text-xs text-gray-500\">+{task.labels.length - 3}</span>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                ))}\n\n                {/* Add Task Card */}\n                <button className=\"w-full border-2 border-dashed border-gray-300 rounded-lg p-4 text-gray-500 hover:border-gray-400 hover:text-gray-600 transition-colors\">\n                  + Add a task\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}