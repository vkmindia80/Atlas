{"ast":null,"code":"import { useLayoutEffect as $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c } from \"./useLayoutEffect.mjs\";\nimport $lmaYr$react, { useRef as $lmaYr$useRef, useCallback as $lmaYr$useCallback } from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $8ae05eaa5c114e9c$var$_React_useInsertionEffect;\n// Use the earliest effect type possible. useInsertionEffect runs during the mutation phase,\n// before all layout effects, but is available only in React 18 and later.\nconst $8ae05eaa5c114e9c$var$useEarlyEffect = ($8ae05eaa5c114e9c$var$_React_useInsertionEffect = (0, $lmaYr$react)['useInsertionEffect']) !== null && $8ae05eaa5c114e9c$var$_React_useInsertionEffect !== void 0 ? $8ae05eaa5c114e9c$var$_React_useInsertionEffect : (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c);\nfunction $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {\n  const ref = (0, $lmaYr$useRef)(null);\n  $8ae05eaa5c114e9c$var$useEarlyEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  // @ts-ignore\n  return (0, $lmaYr$useCallback)(function () {\n    const f = ref.current;\n    return f === null || f === void 0 ? void 0 : f(...arguments);\n  }, []);\n}\nexport { $8ae05eaa5c114e9c$export$7f54fc3180508a52 as useEffectEvent };","map":{"version":3,"names":["$8ae05eaa5c114e9c$var$_React_useInsertionEffect","$8ae05eaa5c114e9c$var$useEarlyEffect","$lmaYr$react","$f0a04ccd8dbdd83b$export$e5c5a5f917a5871c","$8ae05eaa5c114e9c$export$7f54fc3180508a52","fn","ref","$lmaYr$useRef","current","$lmaYr$useCallback","f","arguments"],"sources":["/app/frontend/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useEffectEvent.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {useCallback, useRef} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\n\n// Use the earliest effect type possible. useInsertionEffect runs during the mutation phase,\n// before all layout effects, but is available only in React 18 and later.\nconst useEarlyEffect = React['useInsertionEffect'] ?? useLayoutEffect;\n\nexport function useEffectEvent<T extends Function>(fn?: T): T {\n  const ref = useRef<T | null | undefined>(null);\n  useEarlyEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  // @ts-ignore\n  return useCallback<T>((...args) => {\n    const f = ref.current!;\n    return f?.(...args);\n  }, []);\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;IAiBuBA,+CAAA;AAFvB;AACA;AACA,MAAMC,oCAAA,GAAiB,CAAAD,+CAAA,OAAAE,YAAI,EAAE,qBAAqB,cAA3BF,+CAAA,cAAAA,+CAAA,IAA+B,GAAAG,yCAAc;AAE7D,SAASC,0CAAmCC,EAAM;EACvD,MAAMC,GAAA,GAAM,IAAAC,aAAK,EAAwB;EACzCN,oCAAA,CAAe;IACbK,GAAA,CAAIE,OAAO,GAAGH,EAAA;EAChB,GAAG,CAACA,EAAA,CAAG;EACP;EACA,OAAO,IAAAI,kBAAU,EAAK,YAAI;IACxB,MAAMC,CAAA,GAAIJ,GAAA,CAAIE,OAAO;IACrB,OAAOE,CAAA,aAAAA,CAAA,uBAAAA,CAAA,IAAAC,SAAO;EAChB,GAAG,EAAE;AACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}