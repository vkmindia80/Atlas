{"ast":null,"code":"import _objectSpread from\"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';const API_BASE=process.env.REACT_APP_BACKEND_URL||'http://localhost:8001';class ProjectService{getAuthHeaders(){const token=localStorage.getItem('access_token');return{headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'}};}async getProjects(params){const response=await axios.get(\"\".concat(API_BASE,\"/api/v1/projects/\"),_objectSpread(_objectSpread({},this.getAuthHeaders()),{},{params}));return response.data;}async getProject(id){const response=await axios.get(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(id),this.getAuthHeaders());return response.data;}async getProjectDetail(id){const response=await axios.get(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(id),this.getAuthHeaders());return response.data;}async createProject(project){const response=await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\"),project,this.getAuthHeaders());return response.data;}async updateProject(id,project){const response=await axios.put(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(id),project,this.getAuthHeaders());return response.data;}async deleteProject(id){await axios.delete(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(id),this.getAuthHeaders());}// Task management\nasync createTask(projectId,task){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/tasks\"),task,this.getAuthHeaders());}async updateTask(projectId,taskId,task){await axios.put(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/tasks/\").concat(taskId),task,this.getAuthHeaders());}async deleteTask(projectId,taskId){await axios.delete(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/tasks/\").concat(taskId),this.getAuthHeaders());}// Issue management\nasync createIssue(projectId,issue){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/issues\"),issue,this.getAuthHeaders());}// Risk management\nasync createRisk(projectId,risk){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/risks\"),risk,this.getAuthHeaders());}// Baseline management\nasync createBaseline(projectId,baselineData){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/baselines\"),baselineData,this.getAuthHeaders());}// Approval workflow\nasync requestApproval(projectId,approvalData){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/approvals\"),approvalData,this.getAuthHeaders());}async processApproval(projectId,approvalId,decision){await axios.put(\"\".concat(API_BASE,\"/api/v1/projects/\").concat(projectId,\"/approvals/\").concat(approvalId),decision,this.getAuthHeaders());}// Bulk operations\nasync bulkUpdateStatus(updates){const response=await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/bulk-update-status\"),updates,this.getAuthHeaders());return response.data;}async importFromCSV(file){const formData=new FormData();formData.append('file',file);const response=await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/import-csv\"),formData,{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('access_token')),'Content-Type':'multipart/form-data'}});return response.data;}// Project templates\nasync getProjectTemplates(){const response=await axios.get(\"\".concat(API_BASE,\"/api/v1/projects/templates/\"),this.getAuthHeaders());return response.data;}async createProjectTemplate(template){await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/templates/\"),template,this.getAuthHeaders());}// Intake form\nasync createProjectFromIntake(intakeData){const response=await axios.post(\"\".concat(API_BASE,\"/api/v1/projects/from-intake\"),intakeData,this.getAuthHeaders());return response.data;}}export const projectService=new ProjectService();","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_BACKEND_URL","ProjectService","getAuthHeaders","token","localStorage","getItem","headers","concat","getProjects","params","response","get","_objectSpread","data","getProject","id","getProjectDetail","createProject","project","post","updateProject","put","deleteProject","delete","createTask","projectId","task","updateTask","taskId","deleteTask","createIssue","issue","createRisk","risk","createBaseline","baselineData","requestApproval","approvalData","processApproval","approvalId","decision","bulkUpdateStatus","updates","importFromCSV","file","formData","FormData","append","getProjectTemplates","createProjectTemplate","template","createProjectFromIntake","intakeData","projectService"],"sources":["/app/frontend/src/services/projectService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Project, ProjectCreate, ProjectDetail, ProjectTask, ProjectIssue, ProjectRisk, ProjectIntakeForm } from '../types/project';\n\nconst API_BASE = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\nclass ProjectService {\n  private getAuthHeaders() {\n    const token = localStorage.getItem('access_token');\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n  }\n\n  async getProjects(params?: {\n    skip?: number;\n    limit?: number;\n    status?: string;\n    portfolio_id?: string;\n    project_manager_id?: string;\n    project_type?: string;\n  }): Promise<Project[]> {\n    const response = await axios.get(`${API_BASE}/api/v1/projects/`, {\n      ...this.getAuthHeaders(),\n      params,\n    });\n    return response.data;\n  }\n\n  async getProject(id: string): Promise<Project> {\n    const response = await axios.get(`${API_BASE}/api/v1/projects/${id}`, this.getAuthHeaders());\n    return response.data;\n  }\n\n  async getProjectDetail(id: string): Promise<ProjectDetail> {\n    const response = await axios.get(`${API_BASE}/api/v1/projects/${id}`, this.getAuthHeaders());\n    return response.data;\n  }\n\n  async createProject(project: ProjectCreate): Promise<Project> {\n    const response = await axios.post(`${API_BASE}/api/v1/projects/`, project, this.getAuthHeaders());\n    return response.data;\n  }\n\n  async updateProject(id: string, project: Partial<Project>): Promise<Project> {\n    const response = await axios.put(`${API_BASE}/api/v1/projects/${id}`, project, this.getAuthHeaders());\n    return response.data;\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await axios.delete(`${API_BASE}/api/v1/projects/${id}`, this.getAuthHeaders());\n  }\n\n  // Task management\n  async createTask(projectId: string, task: Partial<ProjectTask>): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/${projectId}/tasks`, task, this.getAuthHeaders());\n  }\n\n  async updateTask(projectId: string, taskId: string, task: Partial<ProjectTask>): Promise<void> {\n    await axios.put(`${API_BASE}/api/v1/projects/${projectId}/tasks/${taskId}`, task, this.getAuthHeaders());\n  }\n\n  async deleteTask(projectId: string, taskId: string): Promise<void> {\n    await axios.delete(`${API_BASE}/api/v1/projects/${projectId}/tasks/${taskId}`, this.getAuthHeaders());\n  }\n\n  // Issue management\n  async createIssue(projectId: string, issue: Partial<ProjectIssue>): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/${projectId}/issues`, issue, this.getAuthHeaders());\n  }\n\n  // Risk management\n  async createRisk(projectId: string, risk: Partial<ProjectRisk>): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/${projectId}/risks`, risk, this.getAuthHeaders());\n  }\n\n  // Baseline management\n  async createBaseline(projectId: string, baselineData: any): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/${projectId}/baselines`, baselineData, this.getAuthHeaders());\n  }\n\n  // Approval workflow\n  async requestApproval(projectId: string, approvalData: any): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/${projectId}/approvals`, approvalData, this.getAuthHeaders());\n  }\n\n  async processApproval(projectId: string, approvalId: string, decision: any): Promise<void> {\n    await axios.put(\n      `${API_BASE}/api/v1/projects/${projectId}/approvals/${approvalId}`,\n      decision,\n      this.getAuthHeaders()\n    );\n  }\n\n  // Bulk operations\n  async bulkUpdateStatus(updates: Array<{ project_id: string; status: string }>): Promise<any> {\n    const response = await axios.post(\n      `${API_BASE}/api/v1/projects/bulk-update-status`,\n      updates,\n      this.getAuthHeaders()\n    );\n    return response.data;\n  }\n\n  async importFromCSV(file: File): Promise<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await axios.post(\n      `${API_BASE}/api/v1/projects/import-csv`,\n      formData,\n      {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n    return response.data;\n  }\n\n  // Project templates\n  async getProjectTemplates(): Promise<any[]> {\n    const response = await axios.get(`${API_BASE}/api/v1/projects/templates/`, this.getAuthHeaders());\n    return response.data;\n  }\n\n  async createProjectTemplate(template: any): Promise<void> {\n    await axios.post(`${API_BASE}/api/v1/projects/templates/`, template, this.getAuthHeaders());\n  }\n\n  // Intake form\n  async createProjectFromIntake(intakeData: {\n    intake_data: ProjectIntakeForm;\n    template_id?: string;\n    auto_approve?: boolean;\n  }): Promise<any> {\n    const response = await axios.post(\n      `${API_BASE}/api/v1/projects/from-intake`,\n      intakeData,\n      this.getAuthHeaders()\n    );\n    return response.data;\n  }\n}\n\nexport const projectService = new ProjectService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}